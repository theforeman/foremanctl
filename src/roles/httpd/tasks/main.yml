---
- name: Set OS dependent variables
  ansible.builtin.include_vars: "{{ ansible_os_family }}.yaml"

- name: Install Apache httpd
  ansible.builtin.package:
    name: "{{ httpd_packages }}"
    state: present

- name: Set httpd_can_network_connect so Apache can connect to Puma and Gunicorn
  ansible.posix.seboolean:
    name: httpd_can_network_connect
    state: true
    persistent: true
  when:
    - ansible_selinux.status == 'enabled'

- name: Enable required modules
  community.general.apache2_module:
    name: "{{ item }}"
  loop: "{{ httpd_modules }}"

- name: Disable welcome page
  ansible.builtin.file:
    path: "{{ httpd_conf_path }}/welcome.conf"
    state: absent

- name: Create cert directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0750"
  loop:
    - "{{ httpd_ssl_dir }}/certs"
    - "{{ httpd_ssl_dir }}/private"

- name: Deploy certificates
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ httpd_ssl_dir }}/{{ item.dest }}"
    remote_src: true
    mode: "0640"
  loop:
    - src: "{{ httpd_server_ca_certificate }}"
      dest: "certs/katello-server-ca.crt"
    - src: "{{ httpd_client_ca_certificate }}"
      dest: "certs/katello-default-ca.crt"
    - src: "{{ httpd_server_certificate }}"
      dest: "certs/katello-apache.crt"
    - src: "{{ httpd_server_key }}"
      dest: "private/katello-apache.key"

- name: Configure foreman-ssl vhost
  ansible.builtin.template:
    src: foreman-ssl-vhost.conf.j2
    dest: "{{ httpd_conf_path }}/foreman-ssl.conf"
    mode: "0644"
  notify:
    - Restart httpd

- name: Flush handlers to restart services
  ansible.builtin.meta: flush_handlers

- name: Start Apache httpd
  ansible.builtin.service:
    name: "{{ httpd_service }}"
    state: started
    enabled: true
