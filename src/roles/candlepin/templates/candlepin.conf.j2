candlepin.consumer_system_name_pattern=.+

candlepin.environment_content_filtering=true
candlepin.auth.basic.enable=false
candlepin.auth.trusted.enable=false

candlepin.audit.hornetq.config_path=/etc/candlepin/broker.xml

candlepin.db.database_manage_on_startup=Manage

candlepin.auth.oauth.enable=true
candlepin.auth.oauth.consumer.katello.secret={{ candlepin_oauth_secret }}

module.config.adapter_module=org.candlepin.katello.KatelloModule

candlepin.ca_key=/etc/candlepin/certs/candlepin-ca.key
candlepin.ca_cert=/etc/candlepin/certs/candlepin-ca.crt

candlepin.async.jobs.ExpiredPoolsCleanupJob.schedule=0 0 0 * * ?

jpa.config.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
jpa.config.hibernate.hbm2ddl.auto=validate
jpa.config.hibernate.connection.username={{ candlepin_database_user }}
jpa.config.hibernate.connection.password={{ candlepin_database_password }}
jpa.config.hibernate.connection.driver_class=org.postgresql.Driver
jpa.config.hibernate.connection.url=jdbc:postgresql://{{ candlepin_database_host }}:{{ candlepin_database_port }}/{{ candlepin_database_name }}?sslmode={{ candlepin_database_ssl_mode }}{% if candlepin_database_ssl_ca is defined %}&sslrootcert={{ candlepin_database_ssl_ca }}{% endif %}


org.quartz.jobStore.misfireThreshold=60000
org.quartz.jobStore.useProperties=false
org.quartz.jobStore.dataSource=myDS
org.quartz.jobStore.tablePrefix=QRTZ_
org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate

org.quartz.dataSource.myDS.driver=org.postgresql.Driver
org.quartz.dataSource.myDS.user={{ candlepin_database_user }}
org.quartz.dataSource.myDS.password={{ candlepin_database_password }}
org.quartz.dataSource.myDS.maxConnections=5
org.quartz.dataSource.myDS.URL=jdbc:postgresql://{{ candlepin_database_host }}:{{ candlepin_database_port }}/{{ candlepin_database_name }}?sslmode={{ candlepin_database_ssl_mode }}{% if candlepin_database_ssl_ca is defined %}&sslrootcert={{ candlepin_database_ssl_ca }}{% endif %}

{% if candlepin_loggers %}
  {% for logger, log_level in candlepin_loggers.items() %}
log4j.logger.{{ logger }}= {{ log_level }}
  {% endfor %}
{% endif %}
